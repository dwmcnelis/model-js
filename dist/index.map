{"version":3,"sources":["model.js","index.js"],"names":["cache","persist","notify","localStorage","setItem","removeItem","error","console","warn","Model","data","id","Error","Object","assign","constructor","prototype","modelName","name","updates","Proxy","get","target","property","receiver","Reflect","set","value","length","update","cached","_cached","now","Date","toISOString","created","random","Math","instance","_id","updated","callback","push","_cache","JSON","stringify","parse","getItem"],"mappings":";;;;;;;;;;;AAAA;AACA,IAAIA,QAAQ,EAAZ;AACA,IAAIC,UAAU,IAAd;AACA,IAAIC,SAAS,EAAb,GCFSO;;ADIT,IAAI;AACFN,eAAaC,OAAb,CAAqB,iBAArB,EAAwC,EAAxC;AACAD,eAAaE,UAAb,CAAwB,iBAAxB;AACD,CAHD,CAGE,OAAMC,KAAN,EAAa;AACbC,UAAQC,IAAR,CAAa,uCAAb,EAAsDF,KAAtD;;AAEAL,YAAU,KAAV;AACD;;AAED;;IACMQ;AACJ,iBAAYC,IAAZ,EAAkB;AAAA;;AAChB,QAAI,CAACA,KAAKC,EAAV,EAAc;AACZ,YAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAEDC,WAAOC,MAAP,CAAc,IAAd,EAAoBJ,IAApB;;AAEA,QAAIC,KAAK,CAAC,KAAKI,WAAL,CAAiBC,SAAjB,CAA2BC,SAA3B,IAAwC,KAAKF,WAAL,CAAiBG,IAA1D,IAAkE,GAAlE,GAAwE,KAAKP,EAAtF;;AAEAT,WAAOS,EAAP,IAAa;AACXQ,eAAS;AADE,KAAb;;AAIA,WAAO,IAAIC,KAAJ,CAAU,IAAV,EAAgB;AACrBC,SADqB,eACjBC,MADiB,EACTC,QADS,EACCC,QADD,EACW;AAClC,eAAOC,QAAQJ,GAAR,CAAYC,MAAZ,EAAoBC,QAApB,EAA8BC,QAA9B,CAAP;AACC,OAHsB;AAKrBE,SALqB,eAKjBJ,MALiB,EAKTC,QALS,EAKCI,KALD,EAKQ;AAC3B,YAAIR,UAAUjB,OAAOS,EAAP,EAAWQ,OAAzB;;AAEA,YAAIA,QAAQS,MAAZ,EAAoB;AAAA;AAAA;AAAA;;AAAA;AAClB,iCAAmBT,OAAnB,8HAA4B;AAAA,kBAAnBU,MAAmB;;AAC1BA,qBAAON,QAAP,EAAiBD,OAAOC,QAAP,CAAjB,EAAmCI,KAAnC;AACD;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAInB;;AAEDF,gBAAQC,GAAR,CAAYJ,MAAZ,EAAoBC,QAApB,EAA8BI,KAA9B;;AAEA,eAAO,IAAP;AACD;AAjBoB,KAAhB,CAAP;AAmBD;;AAED;;;;;;;AAaA;6BACS;AACP,UAAIG,SAAS,KAAKC,OAAL,EAAb;AACA,UAAIC,MAAM,IAAIC,IAAJ,GAAWC,WAAX,EAAV;;AAEA,UAAI,CAACJ,MAAL,EAAa;AACXA,iBAAS,EAAEK,SAASH,GAAX,EAAgBI,QAAQC,KAAKD,MAAL,EAAxB,EAAuCE,UAAU,IAAjD,EAAT;;AAEAtC,cAAM,KAAKuC,GAAL,EAAN,IAAoBT,MAApB;AACD,OAJD,MAIO;AACLA,eAAOQ,QAAP,GAAkB,IAAlB;AACAR,eAAOU,OAAP,GAAiBR,GAAjB;AACD;;AAED,aAAOF,MAAP;AACD;;;8BAES;AACR,aAAO9B,MAAM,KAAKuC,GAAL,EAAN,CAAP;AACD;;;0BAEK;AACJ,aAAO,CAAC,KAAKtB,SAAL,IAAkB,KAAKF,WAAL,CAAiBG,IAApC,IAA4C,GAA5C,GAAkD,KAAKP,EAA9D;AACD;;AAED;;;;6BACS8B,UAAU;AACjBvC,aAAO,KAAKqC,GAAL,EAAP,EAAmBpB,OAAnB,CAA2BuB,IAA3B,CAAgCD,QAAhC;AACD;;;2BAEM;AACL,WAAKE,MAAL;;AAEA,UAAI1C,OAAJ,EAAa;AACXE,qBAAaC,OAAb,CAAqB,KAAKmC,GAAL,EAArB,EAAiCK,KAAKC,SAAL,CAAe,IAAf,CAAjC;AACD;AACF;;;wBAhDUlC,IAAI;AACbA,WAAK,CAAC,KAAKK,SAAL,CAAeC,SAAf,IAA4B,KAAKD,SAAL,CAAeD,WAAf,CAA2BG,IAAxD,IAAgE,GAAhE,GAAsEP,EAA3E;;AAEA,UAAImB,SAAS9B,MAAMW,EAAN,CAAb;;AAEA,UAAI,CAACmB,MAAD,IAAW7B,OAAf,EAAwB;AACtB,eAAO,IAAI,IAAJ,CAAS2C,KAAKE,KAAL,CAAW3C,aAAa4C,OAAb,CAAqBpC,EAArB,CAAX,CAAT,CAAP;AACD;;AAED,aAAOmB,OAAOQ,QAAd;AACD;;;;;;AAyCH;;;QACS7B,QAAAA","file":"index.map","sourceRoot":"../src/js","sourcesContent":["// Variables:\nlet cache = []\nlet persist = true\nlet notify = {}\n\ntry {\n  localStorage.setItem('tdmnco-model-js', {})\n  localStorage.removeItem('tdmnco-model-js')\n} catch(error) {\n  console.warn('Model.js: localStorage not supported!', error)\n\n  persist = false\n}\n\n// Classes:\nclass Model {\n  constructor(data) {\n    if (!data.id) {\n      throw new Error('Model.js: cannot create instance without an id!')\n    }\n\n    Object.assign(this, data)\n\n    let id = (this.constructor.prototype.modelName || this.constructor.name) + '-' + this.id\n\n    notify[id] = {\n      updates: []\n    }\n\n    return new Proxy(this, {\n      get(target, property, receiver) {\n\t\t\t\treturn Reflect.get(target, property, receiver);\n  \t\t},\n\n      set(target, property, value) {\n        let updates = notify[id].updates\n\n        if (updates.length) {\n          for (let update of updates) {\n            update(property, target[property], value)\n          }\n        }\n\n        Reflect.set(target, property, value)\n\n        return true\n      }\n    })\n  }\n\n  // Static functions:\n  static get(id) {\n    id = (this.prototype.modelName || this.prototype.constructor.name) + '-' + id\n\n    let cached = cache[id]\n\n    if (!cached && persist) {\n      return new this(JSON.parse(localStorage.getItem(id)))\n    }\n\n    return cached.instance\n  }\n\n  // Private functions:\n  _cache() {\n    let cached = this._cached()\n    let now = new Date().toISOString()\n\n    if (!cached) {\n      cached = { created: now, random: Math.random(), instance: this }\n\n      cache[this._id()] = cached\n    } else {\n      cached.instance = this\n      cached.updated = now\n    }\n\n    return cached\n  }\n\n  _cached() {\n    return cache[this._id()]\n  }\n\n  _id() {\n    return (this.modelName || this.constructor.name) + '-' + this.id\n  }\n\n  // Public functions:\n  onUpdate(callback) {\n    notify[this._id()].updates.push(callback)\n  }\n\n  save() {\n    this._cache()\n\n    if (persist) {\n      localStorage.setItem(this._id(), JSON.stringify(this))\n    }\n  }\n}\n\n// Exports:\nexport { Model }\n","// Exports:\nexport { Model } from './model'\n"]}