{"version":3,"sources":["model.js","index.js"],"names":["persist","localStorage","setItem","removeItem","error","console","warn","Model","data","_data","_updateHooks","key","Object","defineProperty","get","set","value","hook","keys","push","modelName","constructor","name","id","JSON","stringify","parse","getItem","prototype"],"mappings":";;;;;;;;;;;AAAA;AACA,IAAIA,UAAU,IAAd;;AAEA,IAAI,cCFKO;ADGPN,eAAaC,OAAb,CAAqB,iBAArB,EAAwC,EAAxC;AACAD,eAAaE,UAAb,CAAwB,iBAAxB;AACD,CAHD,CAGE,OAAMC,KAAN,EAAa;AACbC,UAAQC,IAAR,CAAa,uCAAb,EAAsDF,KAAtD;;AAEAJ,YAAU,KAAV;AACD;;AAED;;IACMO;AACJ,iBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,YAAL,GAAoB,EAApB;;AAFgB,+BAIPC,GAJO;AAKdC,aAAOC,cAAP,CAAsB,KAAtB,EAA4BF,GAA5B,EAAiC;AAC/BG,aAAK,eAAM;AACT,iBAAO,MAAKL,KAAL,CAAWE,GAAX,CAAP;AACD,SAH8B;;AAK/BI,aAAK,aAACC,KAAD,EAAW;AAAA;AAAA;AAAA;;AAAA;AACd,kCAAiB,MAAKN,YAAtB,mIAAoC;AAAA,kBAA3BO,IAA2B;;AAClCA,mBAAKN,GAAL,EAAU,MAAKF,KAAL,CAAWE,GAAX,CAAV,EAA2BK,KAA3B;AACD;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKd,gBAAKP,KAAL,CAAWE,GAAX,IAAkBK,KAAlB;;AAEA,iBAAOA,KAAP;AACD;AAb8B,OAAjC;AALc;;AAAA;AAAA;AAAA;;AAAA;AAIhB,2BAAgBJ,OAAOM,IAAP,CAAY,KAAKT,KAAjB,CAAhB,8HAAyC;AAAA,YAAhCE,GAAgC;;AAAA,cAAhCA,GAAgC;AAgBxC;AApBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBjB;;;;6BAQQM,MAAM;AACb,WAAKP,YAAL,CAAkBS,IAAlB,CAAuBF,IAAvB;AACD;;;2BAEM;AACL,UAAIjB,OAAJ,EAAa;AACXC,qBAAaC,OAAb,CAAqB,CAAC,KAAKkB,SAAL,IAAkB,KAAKC,WAAL,CAAiBC,IAApC,IAA4C,GAA5C,GAAkD,KAAKC,EAA5E,EAAgFC,KAAKC,SAAL,CAAe,KAAKhB,KAApB,CAAhF;AACD;AACF;;;wBAdUc,IAAI;AACb,UAAIvB,OAAJ,EAAa;AACX,eAAO,IAAI,IAAJ,CAASwB,KAAKE,KAAL,CAAWzB,aAAa0B,OAAb,CAAqB,CAAC,KAAKC,SAAL,CAAeR,SAAf,IAA4B,KAAKQ,SAAL,CAAeP,WAAf,CAA2BC,IAAxD,IAAgE,GAAhE,GAAsEC,EAA3F,CAAX,CAAT,CAAP;AACD;AACF;;;;;;AAaH;;;QACShB,QAAAA","file":"index.map","sourceRoot":"../src/js","sourcesContent":["// Variables:\nlet persist = true\n\ntry {\n  localStorage.setItem('tdmnco-model-js', {})\n  localStorage.removeItem('tdmnco-model-js')\n} catch(error) {\n  console.warn('Model.js: localStorage not supported!', error)\n\n  persist = false\n}\n\n// Classes:\nclass Model {\n  constructor(data) {\n    this._data = data\n    this._updateHooks = []\n\n    for (let key of Object.keys(this._data)) {\n      Object.defineProperty(this, key, {\n        get: () => {\n          return this._data[key]\n        },\n\n        set: (value) => {\n          for (let hook of this._updateHooks) {\n            hook(key, this._data[key], value)\n          }\n\n          this._data[key] = value\n\n          return value\n        }\n      })\n    }\n  }\n\n  static get(id) {\n    if (persist) {\n      return new this(JSON.parse(localStorage.getItem((this.prototype.modelName || this.prototype.constructor.name) + '-' + id)))\n    }\n  }\n\n  onUpdate(hook) {\n    this._updateHooks.push(hook)\n  }\n\n  save() {\n    if (persist) {\n      localStorage.setItem((this.modelName || this.constructor.name) + '-' + this.id, JSON.stringify(this._data))\n    }\n  }\n}\n\n// Exports:\nexport { Model }\n","// Exports:\nexport { Model } from './model'\n"]}